<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Manage Levels</title>
  <link rel="stylesheet" href="/css/level.css" />
  <link rel="stylesheet" href="/css/teacher/dashboard.css" />
  <style>
    .modal {
      display: none; 
      position: fixed; 
      z-index: 1; 
      left: 0; 
      top: 0; 
      width: 100%; 
      height: 100%; 
      overflow: auto; 
      background-color: rgb(0,0,0); 
      background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
      background-color: #fff;
      margin: 10% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 90%;
      max-width: 600px;
      opacity: 0;
      transition: opacity 0.3s;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); 
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 24px;
      font-weight: bold;
      cursor: pointer;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
    }

    .modal form {
      display: flex;
      flex-direction: column;
    }

    .modal form label {
      margin: 10px 0 5px;
      font-size: 16px;
    }

    .modal form input {
      margin-bottom: 15px;
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ddd;
      border-radius: 5px; 
    }

    .modal form button {
      padding: 10px;
      font-size: 16px;
      color: #fff;
      background-color: #007bff; 
      border: none;
      border-radius: 5px; 
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .modal form button:hover {
      background-color: #0056b3;
    }

    #addLevelModal .modal-content {
      background-color: #f9f9f9; 
    }

    #addLevelModal form button {
      background-color: #28a745; 
    }

    #addLevelModal form button:hover {
      background-color: #218838;
    }
  </style>
</head>

<body>
    <nav>
        <h1 class="logo">JsSmartExam</h1>
        <ul>
            <li>Home</li>
            <li>Quizzes</li>
            <li>Subjects</li>
        </ul>
        <button class="signOut">Sign out</button>
    </nav>
  <div id="addLevelModal" class="modal">
    <div class="modal-content">
      <span class="close close-add">&times;</span>
      <h2>Add New Level</h2>
      <form action="/levels" method="POST">
        <label for="description">Description :</label>
        <input type="text" id="description" name="description" required>
        <label for="min">Min :</label>
        <input type="number" id="min" name="min" required>
        <label for="max">Max :</label>
        <input type="number" id="max" name="max" required>
        <button type="submit">Add</button>
      </form>
    </div>
  </div>

  <div id="editLevelModal" class="modal">
    <div class="modal-content">
      <span class="close close-edit">&times;</span>
      <h2>Edit Level</h2>
      <form id="editLevelForm" action="" method="POST">
        <input type="hidden" id="editLevelId" name="id">
        <label for="editDescription">Description :</label>
        <input type="text" id="editDescription" name="description" required>
        <label for="editMin">Min :</label>
        <input type="number" id="editMin" name="min" required>
        <label for="editMax">Max :</label>
        <input type="number" id="editMax" name="max" required>
        <button type="submit">Save Changes</button>
      </form>
    </div>
  </div>

  <div class="allLevels">
    <div class="header">
      <h2>Levels</h2>
      <button id="openAddLevelModal" class="button">Add Level</button>
    </div>
    <div class="levels">
      <% levels.forEach(level => { %>
      <div class="level-card">
        <h1><%= level.description %></h1>
        <div class="details">
          <h1>Id : <span><%= level.id %></span></h1>
          <h1>Created at : <span><%= level.created_at %></span></h1>
          <h1>Min : <span><%= level.min %></span></h1>
          <h1>Max : <span><%= level.max %></span></h1>
        </div>
        <div class="actions">
          <button class="edit-button" data-id="<%= level.id %>" data-description="<%= level.description %>" data-min="<%= level.min %>" data-max="<%= level.max %>">Edit</button>
          <button class="delete-button" onclick="onDeleteLevel('<%= level.id %>')">Delete</button>
        </div>
      </div>
      <% }) %>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const addLevelModal = document.getElementById("addLevelModal");
      const editLevelModal = document.getElementById("editLevelModal");
      const openAddLevelModalBtn = document.getElementById("openAddLevelModal");
      const closeAddLevelModalSpan = document.querySelector(".close-add");
      const closeEditLevelModalSpan = document.querySelector(".close-edit");
      const editLevelForm = document.getElementById("editLevelForm");

      function openAddLevelModal() {
        addLevelModal.style.display = "flex";
        setTimeout(() => {
          addLevelModal.querySelector('.modal-content').style.opacity = "1";
        }, 10);
      }

      function closeAddLevelModal() {
        addLevelModal.querySelector('.modal-content').style.opacity = "0";
        setTimeout(() => {
          addLevelModal.style.display = "none";
        }, 300);
      }

      function openEditLevelModal(level) {
        document.getElementById("editLevelId").value = level.id;
        document.getElementById("editDescription").value = level.description;
        document.getElementById("editMin").value = level.min;
        document.getElementById("editMax").value = level.max;
        
        editLevelModal.style.display = "flex";
        setTimeout(() => {
          editLevelModal.querySelector('.modal-content').style.opacity = "1";
        }, 10);
      }

      function closeEditLevelModal() {
        editLevelModal.querySelector('.modal-content').style.opacity = "0";
        setTimeout(() => {
          editLevelModal.style.display = "none";
        }, 300);
      }

      openAddLevelModalBtn.onclick = openAddLevelModal;
      closeAddLevelModalSpan.onclick = closeAddLevelModal;
      closeEditLevelModalSpan.onclick = closeEditLevelModal;

      window.onclick = function(event) {
        if (event.target == addLevelModal) {
          closeAddLevelModal();
        }
        if (event.target == editLevelModal) {
          closeEditLevelModal();
        }
      }

      document.querySelectorAll('.edit-button').forEach(button => {
        button.addEventListener('click', (event) => {
          const level = {
            id: button.getAttribute('data-id'),
            description: button.getAttribute('data-description'),
            min: button.getAttribute('data-min'),
            max: button.getAttribute('data-max')
          };
          openEditLevelModal(level);
        });
      });

      editLevelForm.addEventListener('submit', (event) => {
        event.preventDefault();
        const formData = new FormData(editLevelForm);

        fetch(`/levels/${formData.get('id')}`, {
          method: 'POST',
          body: formData
        }).then(response => {
          if (response.ok) {
            alert('Level updated successfully');
            closeEditLevelModal();
            location.reload(); 
          } else {
            alert('Failed to update level');
          }
        }).catch(error => {
          console.error('Error updating level:', error);
          alert('An error occurred while updating the level');
        });
      });

      window.onDeleteLevel = function(id) {
        if (confirm('Are you sure you want to delete this level?')) {
          fetch(`/levels/${id}/delete`, {
            method: 'POST'
          }).then(response => {
            if (response.ok) {
              alert('Level deleted successfully');
              location.reload();
            } else {
              alert('Failed to delete level');
            }
          }).catch(error => {
            console.error('Error deleting level:', error);
            alert('An error occurred while deleting the level');
          });
        }
      };
    });
  </script>
</body>

</html>
